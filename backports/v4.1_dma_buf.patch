--- linux-4.2.8/include/linux/dma-buf.h	2015-12-15 06:26:35.000000000 +0100
+++ linux-4.1.52/include/linux/dma-buf.h	2018-05-28 04:26:45.000000000 +0200
@@ -115,8 +115,6 @@
  * @attachments: list of dma_buf_attachment that denotes all devices attached.
  * @ops: dma_buf_ops associated with this buffer object.
  * @exp_name: name of the exporter; useful for debugging.
- * @owner: pointer to exporter module; used for refcounting when exporter is a
- *         kernel module.
  * @list_node: node for dma_buf accounting and debugging.
  * @priv: exporter specific private data for this buffer object.
  * @resv: reservation object linked to this dma-buf
@@ -131,7 +129,6 @@
 	unsigned vmapping_counter;
 	void *vmap_ptr;
 	const char *exp_name;
-	struct module *owner;
 	struct list_head list_node;
 	void *priv;
 	struct reservation_object *resv;
@@ -167,8 +164,7 @@
 
 /**
  * struct dma_buf_export_info - holds information needed to export a dma_buf
- * @exp_name:	name of the exporter - useful for debugging.
- * @owner:	pointer to exporter module - used for refcounting kernel module
+ * @exp_name:	name of the exporting module - useful for debugging.
  * @ops:	Attach allocator-defined dma buf ops to the new buffer
  * @size:	Size of the buffer
  * @flags:	mode flags for the file
@@ -180,7 +176,6 @@
  */
 struct dma_buf_export_info {
 	const char *exp_name;
-	struct module *owner;
 	const struct dma_buf_ops *ops;
 	size_t size;
 	int flags;
@@ -192,8 +187,7 @@
  * helper macro for exporters; zeros and fills in most common values
  */
 #define DEFINE_DMA_BUF_EXPORT_INFO(a)	\
-	struct dma_buf_export_info a = { .exp_name = KBUILD_MODNAME, \
-					 .owner = THIS_MODULE }
+	struct dma_buf_export_info a = { .exp_name = KBUILD_MODNAME }
 
 /**
  * get_dma_buf - convenience wrapper for get_file.
